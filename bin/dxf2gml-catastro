#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import sys
import json
import glob
import mimetypes
import httplib

from optparse import OptionParser

EPSG_DEFAULT = "25830" 
EPSG_DICT = ['25828', '25829', '25830', '25831']


def post_multipart(host, selector, fields, files):
    """
    Post fields and files to an http host as multipart/form-data.
    fields is a sequence of (name, value) elements for regular form fields.
    files is a sequence of (name, filename, value) elements for data to be uploaded as files
    Return the server's response page.
    """
    content_type, body = encode_multipart_formdata(fields, files)
    h = httplib.HTTP(host)
    h.putrequest('POST', selector)
    h.putheader('content-type', content_type)
    h.putheader('content-length', str(len(body)))
    h.endheaders()
    h.send(body)
    errcode, errmsg, headers = h.getreply()
    return h.file.read()

def encode_multipart_formdata(fields, files):
    """
    fields is a sequence of (name, value) elements for regular form fields.
    files is a sequence of (name, filename, value) elements for data to be uploaded as files
    Return (content_type, body) ready for httplib.HTTP instance
    """
    BOUNDARY = '----------ThIs_Is_tHe_bouNdaRY_$'
    CRLF = '\r\n'
    L = []
    for (key, value) in fields:
        L.append('--' + BOUNDARY)
        L.append('Content-Disposition: form-data; name="%s"' % key)
        L.append('')
        L.append(value)
    for (key, filename, value) in files:
        L.append('--' + BOUNDARY)
        L.append('Content-Disposition: form-data; name="%s"; filename="%s"' % (key, filename))
        L.append('Content-Type: %s' % get_content_type(filename))
        L.append('')
        L.append(value)
    L.append('--' + BOUNDARY + '--')
    L.append('')
    body = CRLF.join(L)
    content_type = 'multipart/form-data; boundary=%s' % BOUNDARY
    return content_type, body


def get_content_type(filename):
    return mimetypes.guess_type(filename)[0] or 'application/octet-stream'


def convert(dxf_file, epsg, server):
    f = open(dxf_file, "rb")
    content = f.read()
    f.close()

    try:
        data = json.loads(post_multipart(
            server, 
            "/catastro/json/", 
            [("code", epsg)], 
            [("dxf", dxf_file, content)]
        ))
    except Exception as e:
        print(str(e))
        exit(1)
  
    gml_file, _ = os.path.splitext(dxf_file)
    gml_file += '.gml'
    with open(gml_file, 'w') as f:
        f.writelines(data['gml'].encode('utf-8'))

    print "-"*40
    for i in data['info']:
        print(i)

    print(u'Generated file: %s' % gml_file)


if __name__ == '__main__':
    parser = OptionParser()
    parser.add_option('-c', '--code',
                          type='choice',
                          action='store',
                          dest='code',
                          choices=EPSG_DICT,
                          default=EPSG_DEFAULT,
                          help='EPSG code',)

    parser.add_option("-s", "--server",
                          action="store", 
                          dest="server",
                          default="localhost",
                          help="dx2gml-catastro server",)

    options, args = parser.parse_args()
    
    print "EPSG code: ", options.code
    print "Server: ", options.server
    if len(args) == 0:
        print "No files or directories especified"
        exit(1)
    
    for _path in args:
        if os.path.isfile(_path):
            convert(_path, options.code, options.server)
        elif os.path.isdir(_path):
            for _file in glob.glob(os.path.join( _path, "*.dxf")):
                convert(_file, options.code, options.server)
        else:
            print("ERROR. File or directory not found'%s'" % _path)
